import streamlit as st
import pandas as pd
import numpy as np

# -----------------------------
# ‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
# -----------------------------
st.set_page_config(page_title="–°–∏—Å—Ç–µ–º–∞ –æ—Ü—ñ–Ω–∫–∏ —Ä–∏–∑–∏–∫—É –ø—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤", layout="wide")
st.title("üìä –°–∏—Å—Ç–µ–º–∞ –æ—Ü—ñ–Ω–∫–∏ —Ä–∏–∑–∏–∫—É –ø—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤")

# -----------------------------
# üìÇ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è CSV
# -----------------------------
CSV_PATH = "companies.csv"

try:
    df = pd.read_csv(CSV_PATH)
    st.success(f"‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –¥–∞–Ω—ñ –∑ '{CSV_PATH}'")
except FileNotFoundError:
    st.warning("‚ö†Ô∏è –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ ‚Äî —Å—Ç–≤–æ—Ä–µ–Ω–æ –ø—Ä–∏–∫–ª–∞–¥–æ–≤—ñ –¥–∞–Ω—ñ.")
    df = pd.DataFrame({
        "company": ["A_Corp", "B_Ltd", "C_Group", "D_Holdings"],
        "financial_score": [0.8, 0.4, 0.3, 0.9],
        "tax_score": [0.6, 0.7, 0.2, 0.9],
        "public_reputation": [0.9, 0.5, 0.4, 0.8],
    })
    df.to_csv(CSV_PATH, index=False)
    st.info("üíæ –ó–±–µ—Ä–µ–∂–µ–Ω–æ –ø—Ä–∏–∫–ª–∞–¥–æ–≤–∏–π —Ñ–∞–π–ª 'companies.csv'")

# -----------------------------
# üßÆ –û–±—á–∏—Å–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω–æ–≥–æ —ñ–Ω–¥–µ–∫—Å—É —Ä–∏–∑–∏–∫—É
# -----------------------------
weights = np.array([0.5, 0.3, 0.2])
scores = df[["financial_score", "tax_score", "public_reputation"]].clip(0, 1).to_numpy()

# —ñ–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω–∏–π —ñ–Ω–¥–µ–∫—Å
df["risk_index"] = np.dot(scores, weights)

# —Ä—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É (1 - —ñ–Ω–¥–µ–∫—Å)
df["risk_level"] = 1 - df["risk_index"]

# –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ä–∏–∑–∏–∫—É
bins = [0, 0.33, 0.66, 1.0]
labels = ["–ù–∏–∑—å–∫–∏–π", "–°–µ—Ä–µ–¥–Ω—ñ–π", "–í–∏—Å–æ–∫–∏–π"]
df["risk_category"] = pd.cut(df["risk_level"], bins=bins, labels=labels)

# -----------------------------
# üìã –¢–∞–±–ª–∏—Ü—è –∑ –ø—ñ–¥—Å–≤—ñ—á—É–≤–∞–Ω–Ω—è–º
# -----------------------------
st.subheader("üìã –û—Ü—ñ–Ω–∫–∞ —Ä–∏–∑–∏–∫—É –∫–æ–º–ø–∞–Ω—ñ–π")

def highlight_risk(row):
    color = ""
    if row["risk_category"] == "–í–∏—Å–æ–∫–∏–π":
        color = "background-color: #f8d7da;"  # —á–µ—Ä–≤–æ–Ω–∏–π
    elif row["risk_category"] == "–°–µ—Ä–µ–¥–Ω—ñ–π":
        color = "background-color: #fff3cd;"  # –∂–æ–≤—Ç–∏–π
    else:
        color = "background-color: #d4edda;"  # –∑–µ–ª–µ–Ω–∏–π
    return [color] * len(row)

st.dataframe(df.style.apply(highlight_risk, axis=1), use_container_width=True)

# -----------------------------
# üìä –ü—Ä–æ—Å—Ç–µ –≥—Ä–∞—Ñ—ñ—á–Ω–µ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–∏–∑–∏–∫—É
# -----------------------------
st.subheader("üìà –í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è —Ä–∏–∑–∏–∫—É")

company_choice = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –∫–æ–º–ø–∞–Ω—ñ—é:", df["company"])
selected = df[df["company"] == company_choice].iloc[0]

risk_value = selected["risk_level"]
bar_length = int(risk_value * 50)  # —à–∫–∞–ª–∞ 0‚Äì50

bar = "üü©" * (50 - bar_length) + "üü•" * bar_length
st.markdown(f"**{company_choice} ‚Äî —Ä–∏–∑–∏–∫ {risk_value:.2f} ({selected['risk_category']})**")
st.text(bar)

# -----------------------------
# ‚ö†Ô∏è –í–∏—Å–æ–∫–æ—Ä–∏–∑–∏–∫–æ–≤—ñ –∫–æ–º–ø–∞–Ω—ñ—ó
# -----------------------------
high_risk = df[df["risk_category"] == "–í–∏—Å–æ–∫–∏–π"]
if not high_risk.empty:
    st.warning("‚ö†Ô∏è –ö–æ–º–ø–∞–Ω—ñ—ó –∑ –≤–∏—Å–æ–∫–∏–º —Ä—ñ–≤–Ω–µ–º —Ä–∏–∑–∏–∫—É:")
    st.write(", ".join(high_risk["company"]))
else:
    st.success("‚úÖ –£—Å—ñ –∫–æ–º–ø–∞–Ω—ñ—ó –º–∞—é—Ç—å –ø—Ä–∏–π–Ω—è—Ç–Ω–∏–π —Ä—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É.")
